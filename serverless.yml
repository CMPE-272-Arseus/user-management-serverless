org: moochat
app: moochat
service: sessions

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage}
  region: us-west-2
  environment:
    DYNAMODB_TABLE: ${file(./${opt:stage}.config.yml):dynamodb_table}
    # SOCKET_SERVICE_URL: ${file(./${opt:stage}.config.yml):socket_service_url}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:BatchGet*"
        - "dynamodb:DescribeStream"
        - "dynamodb:DescribeTable"
        - "dynamodb:Get*"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:BatchWrite*"
        - "dynamodb:CreateTable"
        - "dynamodb:Delete*"
        - "dynamodb:Update*"
        - "dynamodb:PutItem"
      Resource:
        - ${file(./${opt:stage}.config.yml):dynamodb_table_arn}

functions:
  hello:
    name: ${opt:stage}-hello
    handler: handler.hello
    events:
      - httpApi:
          path: /hello
          method: get
  createSession:
    name: ${opt:stage}-createSession
    handler: handler.createSession
    events:
      - httpApi:
          path: /sessions
          method: post
  getSession:
    name: ${opt:stage}-getSession
    handler: handler.getSession
    events:
      - httpApi:
          path: /sessions/{sessionId}
          method: get 
          request:
            parameters:
              paths:
                sessionId: true
  closeSession:
    name: ${opt:stage}-closeSession
    handler: handler.closeSession
    events:
      - httpApi:
          path: /sessions/{sessionId}
          method: delete 
          request:
            parameters:
              paths:
                sessionId: true
